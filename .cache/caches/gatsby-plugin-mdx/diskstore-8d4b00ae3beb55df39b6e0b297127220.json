{"expireTime":9007200840508893000,"key":"gatsby-plugin-mdx-entire-payload-f37cdbeffe0c80133ae2512dc2a10231-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<Billboard\n  heading=\"Amanzi/ATS\"\n  subHeading=\"Manage Complexity\"\n  lead=\"Accelerate Understanding\"\n/>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":6,"column":3,"offset":104},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Section \n  heading=\"What is Amanzi/ATS?\"\n  defaultPadding\n>\n<Div style={{\n  maxWidth: [\"none\", \"none\", \"80%\"]\n}}>","position":{"start":{"line":8,"column":1,"offset":106},"end":{"line":14,"column":4,"offset":220},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"About Amanzi","position":{"start":{"line":16,"column":5,"offset":226},"end":{"line":16,"column":17,"offset":238},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":222},"end":{"line":16,"column":17,"offset":238},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Amanzi provides a flexible and extensible flow and reactive transport\nsimulation capability for environmental applications.  It runs in\nparallel, accurately represents complex topography and stratigraphy, and\nleverages advanced discretizations and solvers.  Amanzi has been used\nto model contaminant migration at various DOE legacy waste sites,\nincluding the Nevada National Security Site and (e.g., Hanford, and\nSavannah River).","position":{"start":{"line":18,"column":1,"offset":240},"end":{"line":24,"column":17,"offset":669},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":18,"column":1,"offset":240},"end":{"line":24,"column":17,"offset":669},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The multiphysics framework in Amanzi, called Arcos, provides modelers\nwith flexibility to creatively isolate, decompose, and explore reduced\nand mixed-dimensional model configurations to develop understanding\nand make predictions.","position":{"start":{"line":26,"column":1,"offset":671},"end":{"line":29,"column":22,"offset":901},"indent":[1,1,1]}}],"position":{"start":{"line":26,"column":1,"offset":671},"end":{"line":29,"column":22,"offset":901},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"About ATS","position":{"start":{"line":32,"column":5,"offset":908},"end":{"line":32,"column":14,"offset":917},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":904},"end":{"line":32,"column":14,"offset":917},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Advanced Terrestrial Simulator is a code for solving ecosystem-based, integrated, distributed hydrology. It builds on the multi-physics framework and toolsets (mesh infrastructure, discretizations, solvers) provided by Amanzi. The ATS has been used to model thermal integrated (surface/subsurce) hydrology in polygonal Arctic tundra, integrated hydrology in pristine and watersheds (e.g., East River Watershed, CO), and to explore the impact of disturbances such as wildfire, on watershed function.","position":{"start":{"line":34,"column":1,"offset":919},"end":{"line":34,"column":503,"offset":1421},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":919},"end":{"line":34,"column":503,"offset":1421},"indent":[]}},{"type":"jsx","value":"</Div>\n</Section>","position":{"start":{"line":38,"column":1,"offset":1425},"end":{"line":39,"column":11,"offset":1442},"indent":[1]}},{"type":"jsx","value":"<Cta \n  heading=\"Ready to get started?\"\n  lead=\"Visit Amanzi/ATS on GitHub to download and build.\"\n  links={<Button url=\"https://amanzi.github.io/amanzi\">Get Started</Button>}\n  style={{\n    bg: \"muted\"\n  }}\n/>","position":{"start":{"line":41,"column":1,"offset":1444},"end":{"line":48,"column":3,"offset":1654},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Home\",\"excerpt\":\"Amanzi/ATS Home\",\"is_front\":true}","position":{"start":{"line":51,"column":1,"offset":1657},"end":{"line":51,"column":89,"offset":1745},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":51,"column":89,"offset":1745}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Home\",\n  \"excerpt\": \"Amanzi/ATS Home\",\n  \"is_front\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Billboard = makeShortcode(\"Billboard\");\nvar Section = makeShortcode(\"Section\");\nvar Div = makeShortcode(\"Div\");\nvar Cta = makeShortcode(\"Cta\");\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Billboard, {\n    heading: \"Amanzi/ATS\",\n    subHeading: \"Manage Complexity\",\n    lead: \"Accelerate Understanding\",\n    mdxType: \"Billboard\"\n  }), mdx(Section, {\n    heading: \"What is Amanzi/ATS?\",\n    defaultPadding: true,\n    mdxType: \"Section\"\n  }, mdx(Div, {\n    style: {\n      maxWidth: [\"none\", \"none\", \"80%\"]\n    },\n    mdxType: \"Div\"\n  }, mdx(\"h3\", null, \"About Amanzi\"), mdx(\"p\", null, \"Amanzi provides a flexible and extensible flow and reactive transport\\nsimulation capability for environmental applications.  It runs in\\nparallel, accurately represents complex topography and stratigraphy, and\\nleverages advanced discretizations and solvers.  Amanzi has been used\\nto model contaminant migration at various DOE legacy waste sites,\\nincluding the Nevada National Security Site and (e.g., Hanford, and\\nSavannah River).\"), mdx(\"p\", null, \"The multiphysics framework in Amanzi, called Arcos, provides modelers\\nwith flexibility to creatively isolate, decompose, and explore reduced\\nand mixed-dimensional model configurations to develop understanding\\nand make predictions.\"), mdx(\"h3\", null, \"About ATS\"), mdx(\"p\", null, \"The Advanced Terrestrial Simulator is a code for solving ecosystem-based, integrated, distributed hydrology. It builds on the multi-physics framework and toolsets (mesh infrastructure, discretizations, solvers) provided by Amanzi. The ATS has been used to model thermal integrated (surface/subsurce) hydrology in polygonal Arctic tundra, integrated hydrology in pristine and watersheds (e.g., East River Watershed, CO), and to explore the impact of disturbances such as wildfire, on watershed function.\"))), mdx(Cta, {\n    heading: \"Ready to get started?\",\n    lead: \"Visit Amanzi/ATS on GitHub to download and build.\",\n    links: mdx(Button, {\n      url: \"https://amanzi.github.io/amanzi\",\n      mdxType: \"Button\"\n    }, \"Get Started\"),\n    style: {\n      bg: \"muted\"\n    },\n    mdxType: \"Cta\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Home\",\n  \"excerpt\": \"Amanzi/ATS Home\",\n  \"is_front\": true\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Billboard = makeShortcode(\"Billboard\");\nconst Section = makeShortcode(\"Section\");\nconst Div = makeShortcode(\"Div\");\nconst Cta = makeShortcode(\"Cta\");\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Billboard heading=\"Amanzi/ATS\" subHeading=\"Manage Complexity\" lead=\"Accelerate Understanding\" mdxType=\"Billboard\" />\n    <Section heading=\"What is Amanzi/ATS?\" defaultPadding mdxType=\"Section\">\n      <Div style={{\n        maxWidth: [\"none\", \"none\", \"80%\"]\n      }} mdxType=\"Div\">\n        <h3>{`About Amanzi`}</h3>\n        <p>{`Amanzi provides a flexible and extensible flow and reactive transport\nsimulation capability for environmental applications.  It runs in\nparallel, accurately represents complex topography and stratigraphy, and\nleverages advanced discretizations and solvers.  Amanzi has been used\nto model contaminant migration at various DOE legacy waste sites,\nincluding the Nevada National Security Site and (e.g., Hanford, and\nSavannah River).`}</p>\n        <p>{`The multiphysics framework in Amanzi, called Arcos, provides modelers\nwith flexibility to creatively isolate, decompose, and explore reduced\nand mixed-dimensional model configurations to develop understanding\nand make predictions.`}</p>\n        <h3>{`About ATS`}</h3>\n        <p>{`The Advanced Terrestrial Simulator is a code for solving ecosystem-based, integrated, distributed hydrology. It builds on the multi-physics framework and toolsets (mesh infrastructure, discretizations, solvers) provided by Amanzi. The ATS has been used to model thermal integrated (surface/subsurce) hydrology in polygonal Arctic tundra, integrated hydrology in pristine and watersheds (e.g., East River Watershed, CO), and to explore the impact of disturbances such as wildfire, on watershed function.`}</p>\n      </Div>\n    </Section>\n    <Cta heading=\"Ready to get started?\" lead=\"Visit Amanzi/ATS on GitHub to download and build.\" links={<Button url=\"https://amanzi.github.io/amanzi\" mdxType=\"Button\">Get Started</Button>} style={{\n      bg: \"muted\"\n    }} mdxType=\"Cta\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}