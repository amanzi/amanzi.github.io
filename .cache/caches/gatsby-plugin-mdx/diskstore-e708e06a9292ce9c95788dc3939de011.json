{"expireTime":9007200840508893000,"key":"gatsby-plugin-mdx-entire-payload-a61c8ed03100c5ce00d0284b3520647e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import photoJSON from '../../../static/photo-gallery/gallery-metadata.json'","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":76,"offset":76},"indent":[]}},{"type":"jsx","value":"<PageHeader \n  heading=\"Image Gallery\"\n  lead=\"Amanzi/ATS Simulations for Environmental Applications\"\n/>","position":{"start":{"line":4,"column":1,"offset":78},"end":{"line":7,"column":3,"offset":182},"indent":[1,1,1]}},{"type":"jsx","value":"<Section>\n<Div style={{\n  maxWidth: [\"none\", \"none\", \"80%\"]\n}}>","position":{"start":{"line":9,"column":1,"offset":184},"end":{"line":12,"column":4,"offset":247},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Contaminant Transport at Legacy Waste Sites","position":{"start":{"line":14,"column":5,"offset":253},"end":{"line":14,"column":48,"offset":296},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":249},"end":{"line":14,"column":48,"offset":296},"indent":[]}},{"type":"jsx","value":"<PhotoGallery photos={photoJSON[\"photoGalleryRTM\"]} />","position":{"start":{"line":16,"column":1,"offset":298},"end":{"line":16,"column":55,"offset":352},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matrix-Fracture Flow and Transport","position":{"start":{"line":18,"column":5,"offset":358},"end":{"line":18,"column":39,"offset":392},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":354},"end":{"line":18,"column":39,"offset":392},"indent":[]}},{"type":"jsx","value":"<PhotoGallery photos={photoJSON[\"photoGalleryMF\"]} />","position":{"start":{"line":20,"column":1,"offset":394},"end":{"line":20,"column":54,"offset":447},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Thermal Hydrology in the Arctic","position":{"start":{"line":22,"column":5,"offset":453},"end":{"line":22,"column":36,"offset":484},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":449},"end":{"line":22,"column":36,"offset":484},"indent":[]}},{"type":"jsx","value":"<PhotoGallery photos={photoJSON[\"photoGalleryArctic\"]} />","position":{"start":{"line":24,"column":1,"offset":486},"end":{"line":24,"column":58,"offset":543},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Watersheds","position":{"start":{"line":26,"column":5,"offset":549},"end":{"line":26,"column":15,"offset":559},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":545},"end":{"line":26,"column":15,"offset":559},"indent":[]}},{"type":"jsx","value":"<PhotoGallery photos={photoJSON[\"photoGalleryWatersheds\"]} />","position":{"start":{"line":28,"column":1,"offset":561},"end":{"line":28,"column":62,"offset":622},"indent":[]}},{"type":"jsx","value":"</Div>\n</Section>","position":{"start":{"line":31,"column":1,"offset":625},"end":{"line":32,"column":11,"offset":642},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Gallery\",\"excerpt\":\"Amanzi/ATS figures and animations.\"}","position":{"start":{"line":35,"column":1,"offset":645},"end":{"line":35,"column":95,"offset":739},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":95,"offset":739}}},"scopeImports":["import photoJSON from '../../../static/photo-gallery/gallery-metadata.json'","import React from 'react'"],"scopeIdentifiers":["photoJSON","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gallery\",\n  \"excerpt\": \"Amanzi/ATS figures and animations.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar Section = makeShortcode(\"Section\");\nvar Div = makeShortcode(\"Div\");\nvar PhotoGallery = makeShortcode(\"PhotoGallery\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(PageHeader, {\n    heading: \"Image Gallery\",\n    lead: \"Amanzi/ATS Simulations for Environmental Applications\",\n    mdxType: \"PageHeader\"\n  }), mdx(Section, {\n    mdxType: \"Section\"\n  }, mdx(Div, {\n    style: {\n      maxWidth: [\"none\", \"none\", \"80%\"]\n    },\n    mdxType: \"Div\"\n  }, mdx(\"h3\", null, \"Contaminant Transport at Legacy Waste Sites\"), mdx(PhotoGallery, {\n    photos: photoJSON[\"photoGalleryRTM\"],\n    mdxType: \"PhotoGallery\"\n  }), mdx(\"h3\", null, \"Matrix-Fracture Flow and Transport\"), mdx(PhotoGallery, {\n    photos: photoJSON[\"photoGalleryMF\"],\n    mdxType: \"PhotoGallery\"\n  }), mdx(\"h3\", null, \"Thermal Hydrology in the Arctic\"), mdx(PhotoGallery, {\n    photos: photoJSON[\"photoGalleryArctic\"],\n    mdxType: \"PhotoGallery\"\n  }), mdx(\"h3\", null, \"Watersheds\"), mdx(PhotoGallery, {\n    photos: photoJSON[\"photoGalleryWatersheds\"],\n    mdxType: \"PhotoGallery\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport photoJSON from '../../../static/photo-gallery/gallery-metadata.json'\nexport const _frontmatter = {\n  \"title\": \"Gallery\",\n  \"excerpt\": \"Amanzi/ATS figures and animations.\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst Section = makeShortcode(\"Section\");\nconst Div = makeShortcode(\"Div\");\nconst PhotoGallery = makeShortcode(\"PhotoGallery\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <PageHeader heading=\"Image Gallery\" lead=\"Amanzi/ATS Simulations for Environmental Applications\" mdxType=\"PageHeader\" />\n    <Section mdxType=\"Section\">\n      <Div style={{\n        maxWidth: [\"none\", \"none\", \"80%\"]\n      }} mdxType=\"Div\">\n        <h3>{`Contaminant Transport at Legacy Waste Sites`}</h3>\n        <PhotoGallery photos={photoJSON[\"photoGalleryRTM\"]} mdxType=\"PhotoGallery\" />\n        <h3>{`Matrix-Fracture Flow and Transport`}</h3>\n        <PhotoGallery photos={photoJSON[\"photoGalleryMF\"]} mdxType=\"PhotoGallery\" />\n        <h3>{`Thermal Hydrology in the Arctic`}</h3>\n        <PhotoGallery photos={photoJSON[\"photoGalleryArctic\"]} mdxType=\"PhotoGallery\" />\n        <h3>{`Watersheds`}</h3>\n        <PhotoGallery photos={photoJSON[\"photoGalleryWatersheds\"]} mdxType=\"PhotoGallery\" />\n      </Div>\n    </Section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}