{"expireTime":9007200840508893000,"key":"gatsby-plugin-mdx-entire-payload-47a6190638e8b39ecd35954aa8b04749-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<PageHeader \n  heading=\"Downloads\"\n  lead=\"Source and Docker distributions\"\n/>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":3,"offset":79},"indent":[1,1,1]}},{"type":"jsx","value":"<Section>\n<Div style={{\n  maxWidth: [\"90%\"],\n  minWidth: [\"80%\"]\n}}>","position":{"start":{"line":7,"column":1,"offset":81},"end":{"line":11,"column":4,"offset":149},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Grid columns={[1, 2]}>\n<Div>","position":{"start":{"line":13,"column":1,"offset":151},"end":{"line":14,"column":6,"offset":180},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Amanzi","position":{"start":{"line":16,"column":4,"offset":185},"end":{"line":16,"column":10,"offset":191},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":182},"end":{"line":16,"column":10,"offset":191},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Source code","position":{"start":{"line":17,"column":5,"offset":196},"end":{"line":17,"column":16,"offset":207},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":192},"end":{"line":17,"column":16,"offset":207},"indent":[]}},{"type":"jsx","value":"<Button url=\"https://github.com/amanzi/amanzi/releases\">\nDownload: Latest Release\n</Button>","position":{"start":{"line":19,"column":1,"offset":209},"end":{"line":21,"column":10,"offset":300},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Git repository","position":{"start":{"line":23,"column":5,"offset":306},"end":{"line":23,"column":19,"offset":320},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":302},"end":{"line":23,"column":19,"offset":320},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"$ git clone https://github.com/amanzi/amanzi.git","position":{"start":{"line":25,"column":1,"offset":322},"end":{"line":27,"column":4,"offset":380},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DockerHub","position":{"start":{"line":29,"column":5,"offset":386},"end":{"line":29,"column":14,"offset":395},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":382},"end":{"line":29,"column":14,"offset":395},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"$ docker pull metsi/amanzi:latest","position":{"start":{"line":31,"column":1,"offset":397},"end":{"line":33,"column":4,"offset":440},"indent":[1,1]}},{"type":"jsx","value":"</Div>\n<Div>","position":{"start":{"line":34,"column":1,"offset":441},"end":{"line":35,"column":6,"offset":453},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ATS","position":{"start":{"line":37,"column":4,"offset":458},"end":{"line":37,"column":7,"offset":461},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":455},"end":{"line":37,"column":7,"offset":461},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Source code","position":{"start":{"line":39,"column":5,"offset":467},"end":{"line":39,"column":16,"offset":478},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":463},"end":{"line":39,"column":16,"offset":478},"indent":[]}},{"type":"jsx","value":"<Button url=\"https://github.com/amanzi/ats/releases\">\nDownload: Latest Release\n</Button>","position":{"start":{"line":41,"column":1,"offset":480},"end":{"line":43,"column":10,"offset":568},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Git repository","position":{"start":{"line":45,"column":5,"offset":574},"end":{"line":45,"column":19,"offset":588},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":570},"end":{"line":45,"column":19,"offset":588},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"$ git clone https://github.com/amanzi/ats.git","position":{"start":{"line":47,"column":1,"offset":590},"end":{"line":49,"column":4,"offset":645},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DockerHub","position":{"start":{"line":51,"column":5,"offset":651},"end":{"line":51,"column":14,"offset":660},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":647},"end":{"line":51,"column":14,"offset":660},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"$ docker pull metsi/ats:latest","position":{"start":{"line":53,"column":1,"offset":662},"end":{"line":55,"column":4,"offset":702},"indent":[1,1]}},{"type":"jsx","value":"</Div>\n</Grid>\n</Div>\n</Section>","position":{"start":{"line":56,"column":1,"offset":703},"end":{"line":59,"column":11,"offset":735},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Downloads\",\"excerpt\":\"ok\"}","position":{"start":{"line":63,"column":1,"offset":739},"end":{"line":63,"column":65,"offset":803},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":65,"offset":803}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Downloads\",\n  \"excerpt\": \"ok\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar Section = makeShortcode(\"Section\");\nvar Div = makeShortcode(\"Div\");\nvar Grid = makeShortcode(\"Grid\");\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(PageHeader, {\n    heading: \"Downloads\",\n    lead: \"Source and Docker distributions\",\n    mdxType: \"PageHeader\"\n  }), mdx(Section, {\n    mdxType: \"Section\"\n  }, mdx(Div, {\n    style: {\n      maxWidth: [\"90%\"],\n      minWidth: [\"80%\"]\n    },\n    mdxType: \"Div\"\n  }, mdx(Grid, {\n    columns: [1, 2],\n    mdxType: \"Grid\"\n  }, mdx(Div, {\n    mdxType: \"Div\"\n  }, mdx(\"h2\", null, \"Amanzi\"), mdx(\"h3\", null, \"Source code\"), mdx(Button, {\n    url: \"https://github.com/amanzi/amanzi/releases\",\n    mdxType: \"Button\"\n  }, \"Download: Latest Release\"), mdx(\"h3\", null, \"Git repository\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ git clone https://github.com/amanzi/amanzi.git\\n\")), mdx(\"h3\", null, \"DockerHub\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker pull metsi/amanzi:latest\\n\"))), mdx(Div, {\n    mdxType: \"Div\"\n  }, mdx(\"h2\", null, \"ATS\"), mdx(\"h3\", null, \"Source code\"), mdx(Button, {\n    url: \"https://github.com/amanzi/ats/releases\",\n    mdxType: \"Button\"\n  }, \"Download: Latest Release\"), mdx(\"h3\", null, \"Git repository\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ git clone https://github.com/amanzi/ats.git\\n\")), mdx(\"h3\", null, \"DockerHub\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker pull metsi/ats:latest\\n\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Downloads\",\n  \"excerpt\": \"ok\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst Section = makeShortcode(\"Section\");\nconst Div = makeShortcode(\"Div\");\nconst Grid = makeShortcode(\"Grid\");\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <PageHeader heading=\"Downloads\" lead=\"Source and Docker distributions\" mdxType=\"PageHeader\" />\n    <Section mdxType=\"Section\">\n      <Div style={{\n        maxWidth: [\"90%\"],\n        minWidth: [\"80%\"]\n      }} mdxType=\"Div\">\n        <Grid columns={[1, 2]} mdxType=\"Grid\">\n          <Div mdxType=\"Div\">\n            <h2>{`Amanzi`}</h2>\n            <h3>{`Source code`}</h3>\n            <Button url=\"https://github.com/amanzi/amanzi/releases\" mdxType=\"Button\">\nDownload: Latest Release\n            </Button>\n            <h3>{`Git repository`}</h3>\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\"\n              }}>{`$ git clone https://github.com/amanzi/amanzi.git\n`}</code></pre>\n            <h3>{`DockerHub`}</h3>\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\"\n              }}>{`$ docker pull metsi/amanzi:latest\n`}</code></pre>\n          </Div>\n          <Div mdxType=\"Div\">\n            <h2>{`ATS`}</h2>\n            <h3>{`Source code`}</h3>\n            <Button url=\"https://github.com/amanzi/ats/releases\" mdxType=\"Button\">\nDownload: Latest Release\n            </Button>\n            <h3>{`Git repository`}</h3>\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\"\n              }}>{`$ git clone https://github.com/amanzi/ats.git\n`}</code></pre>\n            <h3>{`DockerHub`}</h3>\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\"\n              }}>{`$ docker pull metsi/ats:latest\n`}</code></pre>\n          </Div>\n        </Grid>\n      </Div>\n    </Section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}