{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-content-pages-downloads-index-mdx-3a755549d1077c54ebd9.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/pages/downloads/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import { graphql, useStaticQuery } from \"gatsby\"\n\ntype UseSiteMetadataProps = {\n  site: {\n    siteMetadata: {\n      siteTitle: string\n      siteTitleAlt: string\n      siteHeadline: string\n      siteUrl: string\n      siteDescription: string\n      siteImage: string\n      siteLanguage: string\n      author: string\n      [key: string]: unknown\n    }\n  }\n}\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery<UseSiteMetadataProps>(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteTitle\n          siteTitleAlt\n          siteHeadline\n          siteUrl\n          siteDescription\n          siteImage\n          siteLanguage\n          author\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Container, Flex, Box, Button} from 'theme-ui';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    hr: \"hr\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", null, React.createElement(Text, {\n    children: `Downloads`,\n    sx: {\n      fontSize: [6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  })), \"\\n\", React.createElement(\"div\", null, React.createElement(Text, {\n    children: `Source and Docker distributions`,\n    sx: {\n      fontSize: [4],\n      color: `subheading`\n    }\n  })), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(Flex, null, React.createElement(Container, {\n    p: 4,\n    gap: \"10px\"\n  }, React.createElement(_components.h2, null, \"Amanzi\"), React.createElement(_components.h3, null, \"Source code\"), React.createElement(Button, {\n    style: {\n      backgroundColor: '#0e6e9b',\n      color: 'white'\n    },\n    onClick: () => window.location.href = \"https://github.com/amanzi/amanzi/releases\"\n  }, \"Download: Latest Release\"), React.createElement(_components.h3, null, \"Git repository\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ git clone https://github.com/amanzi/amanzi.git\\n\")), React.createElement(_components.h3, null, \"DockerHub\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ docker pull metsi/amanzi:latest\\n\"))), React.createElement(Container, {\n    p: 4,\n    gap: \"10px\"\n  }, React.createElement(_components.h2, null, \"ATS\"), React.createElement(_components.h3, null, \"Source code\"), React.createElement(Button, {\n    style: {\n      backgroundColor: '#0e6e9b',\n      color: 'white'\n    },\n    onClick: () => window.location.href = \"https://github.com/amanzi/ats/releases\"\n  }, \"Download: Latest Release\"), React.createElement(_components.h3, null, \"Git repository\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ git clone https://github.com/amanzi/ats.git\\n\")), React.createElement(_components.h3, null, \"DockerHub\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ docker pull metsi/ats:latest\\n\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/amanzi.github.io/amanzi.github.io/content/pages/downloads/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["_ref","data","page","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","_ref2","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","useSiteMetadata","useStaticQuery","site","siteMetadata","pathname","image","canonicalUrl","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","hr","h2","h3","pre","code","_provideComponents","components","Text","id","component","Error","_missingMdxReference","fontSize","fontWeight","color","Flex","Container","p","gap","Button","style","backgroundColor","onClick","window","location","className","wrapper","MDXLayout","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}