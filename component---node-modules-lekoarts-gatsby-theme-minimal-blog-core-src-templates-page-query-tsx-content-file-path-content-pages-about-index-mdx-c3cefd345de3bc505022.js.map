{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-content-pages-about-index-mdx-c3cefd345de3bc505022.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/pages/about/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import { graphql, useStaticQuery } from \"gatsby\"\n\ntype UseSiteMetadataProps = {\n  site: {\n    siteMetadata: {\n      siteTitle: string\n      siteTitleAlt: string\n      siteHeadline: string\n      siteUrl: string\n      siteDescription: string\n      siteImage: string\n      siteLanguage: string\n      author: string\n      [key: string]: unknown\n    }\n  }\n}\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery<UseSiteMetadataProps>(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteTitle\n          siteTitleAlt\n          siteHeadline\n          siteUrl\n          siteDescription\n          siteImage\n          siteLanguage\n          author\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport \"/src/components/image-gallery/styles.css\";\nimport {Flex, Box, Container, jsx, get} from \"theme-ui\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    hr: \"hr\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Flex, null, React.createElement(Box, {\n    p: 2,\n    sx: {\n      flex: 3\n    }\n  }, React.createElement(\"div\", null, React.createElement(Text, {\n    children: `About Amanzi-ATS.`,\n    sx: {\n      fontSize: [6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  })), React.createElement(\"div\", null, React.createElement(Text, {\n    children: `Managing Complexity to Accelerate Understanding`,\n    sx: {\n      fontSize: [4],\n      color: `subheading`\n    }\n  }))), React.createElement(Box, {\n    p: 2,\n    sx: {\n      flex: 1\n    }\n  }, React.createElement(\"div\", {\n    className: \"gallery-img\"\n  }, React.createElement(\"a\", {\n    href: \"https://int.lanl.gov/news/news_stories/2020/september/0929-rd-100-finals.shtml?source=topnews \"\n  }, React.createElement(\"img\", {\n    src: \"/photo-gallery/thumbnails/RD100_2020_Winner_Logo_Color.png\",\n    alt: \"R&D 100\",\n    style: {\n      width: '50%',\n      height: 'auto'\n    }\n  }))))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"Amanzi\"), \"\\n\", React.createElement(_components.p, null, \"Amanzi provides a flexible and extensible parallel flow and reactive transport simulation capability for environmental applications.  It includes general polyhedral mesh infrastructure, which leverages MSTK, advanced discretizations of process models, including traditional finite volume schemes, mimetic finite differences, and nonlinear finite volumes.  In addition, it provides advanced nonlinear solvers, such as Nonlinear Krylov Acceleration (NKA) and Anderson Acceleration, and leverages Trilinos-ML and Hypre Algebraic Multigrid for scalable solvers. The reaction of contaminants and minerals carried by the flow through the surrounding rock and soil is modeled through a general software interface called Alquimia that allows Amanzi to interface with a variety of powerful geochemistry engines including PFLOTRAN and CrunchFlow. The code is parallel and leverages open-source parallel frameworks such as Trilinos, PETSc.  Amanzi has been used to model contaminant migration at various DOE waste sites (e.g., Nevada National Security Site, and Savannah River), and is generally applicable to groundwater contaminant migration under partially saturated, nonisothermal conditions and its interaction with surface water.\"), \"\\n\", React.createElement(_components.h3, null, \"Arcos and Meshing Workflows\"), \"\\n\", React.createElement(_components.p, null, \"The multiphysics framework in Amanzi is called Arcos, and it provides modelers with the flexibility they need to creatively decompose complex problems and explore a variety of mixed-dimensional model configurations to develop understanding and make predictions of environmental systems. In particular, Arcos provides flexibility for hierarchical weak and strong coupling of processes with subcycling of mixed dimensions. This capability in conjuction with its powerful mesh infrastructure enables the splitting and subsetting of meshes to unleash creative conceptual modelin.  Applications include, coupling flow and transport on discrete-fracture-networks (DFNs) and the background matrix; integrated hydrology coupling surface and subsurface processes; an intermediate scale thermal hydrology model of polygonal tundra based on one-dimensional columns coupled to the two-dimensional surface.\"), \"\\n\", React.createElement(_components.h3, null, \"Advanced Terrestrial Simulator (ATS)\"), \"\\n\", React.createElement(_components.p, null, \"The Advanced Terrestrial Simulator is a code for solving ecosystem-based, integrated, distributed hydrology.  It builds on the multi-physics framework and toolsets (mesh infrastructure, discretizations, solvers) provided by Amanzi and is a key driver of development of the flexible multiphysics framework Acros. Capabilities are largely based on solving various forms of Richards equation coupled to a surface flow equation, along with the needed sources and sinks for ecosystem and climate models.  This can (but need not) include thermal processes (especially ice for frozen soils), evapo-transpiration, albedo-driven surface energy balances, snow, biogeochemistry, plant dynamics, deformation, transport, and much more. It is unique in its thermal integrated hydrology capabilities, which includes thermal energy with freeze/thaw processes in both the surface and subsurface water, and its reactive transport capabilities, which are also coupled in both surface and subsurface water.\"), \"\\n\", React.createElement(_components.h3, null, \"Open Source / Open Development\"), \"\\n\", React.createElement(_components.p, null, \"Amanzi-ATS is jointly developed by LANL, LBNL, and PNNL, and ORNL as an open source project under the three-clause BSD license.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/amanzi.github.io/amanzi.github.io/content/pages/about/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["_ref","data","page","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","_ref2","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","useSiteMetadata","useStaticQuery","site","siteMetadata","pathname","image","canonicalUrl","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","hr","h3","p","_provideComponents","components","Text","id","component","Error","_missingMdxReference","Flex","Box","flex","fontSize","fontWeight","color","className","src","alt","style","width","height","wrapper","MDXLayout","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}